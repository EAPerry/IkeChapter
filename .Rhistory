library(gtsummary)
# Aesthetics
library(stargazer)
library(ggpubr)
library(ggstats)
library(NatParksPalettes)
options(scipen = 99)    # Get rid of scientific notation
# Set some color palettes
theme_set(theme_bw())
options(ggplot2.continuous.colour= natparks.pals("Yellowstone", 6, type = "continuous"))
options(ggplot2.continuous.fill = natparks.pals("Yellowstone", 6, type = "continuous"))
options(ggplot2.discrete.colour= natparks.pals("Yellowstone", 6, type = "discrete"))
options(ggplot2.discrete.fill = natparks.pals("Yellowstone", 6, type = "discrete"))
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df <- read_csv('Results/cleaned_filtered_data.csv')
temp <- df %>% distinct(FIPS, fixedcont2)
View(temp)
temp <- temp %>% filter(fixedcont2 != 0)
mean(temp$fixedcont2)
log(34509841)
17.35676 * (-0.0231) + 0.3841
mean(log(temp$fixedcont2))
14.31156 * (-0.0231) + 0.3841
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Natural Disasters and Giving: Book Chapter -----------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
# Contributor(s): Brenna Jungers, Evan Perry, Drew Westberg
# Last Revised: 2023-04-02
#
# Purpose: The purpose of this script is to clean, organize, and summarize key
# data related to the impact of natural disasters on local charitable giving.
# Primary goals include: (1) basic data cleaning on nonprofit data, (2)
# summarizing and visualizing the data, and (3) running the econometric analysis
# on the data.
#
#
# Outline: (Crtl + Shift + O in RStudio)
#   1. Code to Change When Replicating
#   2. Importing Packages and Setup
#   3. Reading and Processing Data
#   4. Data Summary & Visualization
#   5. Analysis
#   6. Placebo Tests
#
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
## Code to Change When Replicating ---------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Set your working directory
# not needed - tied to Rproj.
# setwd("C:/Users/eaper/CoeRA/IkeChapter")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
## Importing Packages and Setup ------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Basic data manipulation and importing
library(tidyverse)
library(lubridate)
library(arrow)
library(fastDummies)
library(callr)
# Spatial
library(sf)
library(tidycensus)
library(tmap)
library(tmaptools)
# Estimation
library(fixest)
library(marginaleffects)
library(gtsummary)
# Aesthetics
library(stargazer)
library(ggpubr)
library(ggstats)
library(NatParksPalettes)
options(scipen = 99)    # Get rid of scientific notation
# Set some color palettes
theme_set(theme_bw())
options(ggplot2.continuous.colour= natparks.pals("Yellowstone", 6, type = "continuous"))
options(ggplot2.continuous.fill = natparks.pals("Yellowstone", 6, type = "continuous"))
options(ggplot2.discrete.colour= natparks.pals("Yellowstone", 6, type = "discrete"))
options(ggplot2.discrete.fill = natparks.pals("Yellowstone", 6, type = "discrete"))
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
hurdat_raw <- read_csv("Data/hurdat/hurdat2-1851-2023-051124.csv")
hurdat_raw <- read_csv("Data/hurdat/hurdat2-1851-2023-051124.txt")
hurdat_raw <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ", ")
View(hurdat_raw)
hurdat_raw <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",")
View(hurdat_raw)
hurdat_raw <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1)
View(hurdat_raw)
hurdat_raw <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
View(hurdat_raw)
hurdat_raw <-
dat <- vroom(read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F))
library(vroom)
hurdat_raw <-
dat <- vroom(read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F))
problems(dat)
# hurdat_raw
dat <- vroom(read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F))
# hurdat_raw
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
problems()
View(hurdat)
View(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A")
View(tmp_header)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), strtrim))
?strtrim()
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim))
View(hurdat)
View(tmp_header)
# Read the HURDAT2 Data
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
# Add rownumbers
hurdat$rownum <- 1:nrow(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3,rownum) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim))
View(tmp_header)
View(hurdat)
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
rowwise() %>%
mutate(tmp_num2 = ifelse(tmp_num > lag(tmp_num), tmp_num, lag(tmp_num)))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
rowwise() %>%
mutate(tmp_num2 = ifelse(tmp_num > lag(tmp_num) | is.na(lag(tmp_num)), tmp_num, lag(tmp_num)))
View(hurdat)
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(tmp_num2 = rolsum(tmp_num))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(tmp_num2 = roll_sum(tmp_num))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(tmp_num2 = cumsum(tmp_num))
View(hurdat)
# Read the HURDAT2 Data
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
# Add rownumbers
hurdat$rownum <- 1:nrow(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3,rownum) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(tmp_num = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(tmp_num2 = cumsum(tmp_num))
rm(hurdat_raw)
View(hurdat)
# Read the HURDAT2 Data
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
# Add rownumbers
hurdat$rownum <- 1:nrow(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3,rownum) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim),
rownum = cumsum(rownum))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(rownum = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(rownum = cumsum(rownum))
View(hurdat)
View(tmp_header)
# Peace of mind
library(tidylog)
install.packages('tidylog')
# Peace of mind
library(tidylog)
# Merge these together
hurdat <- hurdat %>%
left_join(tmp_header, by=rownum)
# Merge these together
hurdat <- hurdat %>%
left_join(tmp_header, by='rownum')
View(hurdat)
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",8:21), ~ replace(.x, "-999",NA)))
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",8:21), function(x) replace(x, "-999", NA)))
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",8:21), as.numeric))
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",7:21), as.numeric))
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",7:21), as.numeric)) %>%
mutate(across(paste0("X",7:21), ~ ifelse(.x == -999, NA, .x)))
View(hurdat)
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = str_remove(X5, c("N","S"))
)
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = str_remove(str_remove(X5, "N"), "S"),
lon = str_remove(str_remove(X5, "N"), "S")
)
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = as.numeric(str_remove(str_remove(X5, "N"), "S")),
lon = as.numeric(str_remove(str_remove(X6, "W"), "E"))
)
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = as.numeric(str_remove(str_remove(X5, "N"), "S")),
lat = ifelse(str_detect(X5, "S"), -lat, lat),
lon = as.numeric(str_remove(str_remove(X6, "W"), "E")),
lon = ifelse(str_detect(X6, "W"), -lon, lon)
)
# Project Title: Natural Disasters and Giving - Book Chapter
# Script Title: Clean HURDAT Data
# Contributor(s): Brenna Jungers, Evan Perry, Drew Westberg
# Last Revised: 2024-10-19
# Purpose: This script reads and prepares the HURDAT data.
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Read and Format HURDAT Data --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Read the HURDAT2 Data
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
# Add rownumbers
hurdat$rownum <- 1:nrow(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3,rownum) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim),
rownum = cumsum(rownum))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(rownum = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(rownum = cumsum(rownum))
# Merge these together
hurdat <- hurdat %>%
left_join(tmp_header, by='rownum')
# The unmatched rows are from the first hurricane in 1851; we don't mind losing that
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",c(1:2,7:21)), as.numeric)) %>%
mutate(across(paste0("X",7:21), ~ ifelse(.x == -999, NA, .x)))
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = as.numeric(str_remove(str_remove(X5, "N"), "S")),
lat = ifelse(str_detect(X5, "S"), -lat, lat),
lon = as.numeric(str_remove(str_remove(X6, "W"), "E")),
lon = ifelse(str_detect(X6, "W"), -lon, lon)
)
# Rename all the columns
hurdat <- hurdat %>%
rename(
date = X1,
time = X2,
record_status_id = X3,
storm_class = X4,
lat_str = X5,
lon_str = X6,
max_wind = X7,
min_pressure = X8,
ne_34kt_wind_radii = X9,
se_34kt_wind_radii = X10,
sw_34kt_wind_radii = X11,
nw_34kt_wind_radii = X12,
ne_50kt_wind_radii = X13,
se_50kt_wind_radii = X14,
sw_50kt_wind_radii = X15,
nw_50kt_wind_radii = X16,
ne_64kt_wind_radii = X17,
se_64kt_wind_radii = X18,
sw_64kt_wind_radii = X19,
nw_64kt_wind_radii = X20,
max_wind_radii = X21
)
# Just keep the hurricanes in there since 2000 for now
hurdat <- hurdat %>%
filter(date > 20000000)
rm(tmp_header)
hurdat_sf <- st_as_sf(hurdat, coords = ('lon','lat'))
?st_as_sf()
# US States
all_states <- tigris::states(cb = F)
ggplot() +
geom_sf(all_states)
ggplot() +
geom_sf(aes(all_states))
View(all_states)
ggplot(all_states) +
geom_sf()
View(all_states)
all_states <- all_states %>% filter(REGION != 9, !(STUSPS %in% c('AK','HI')))
ggplot(all_states) +
geom_sf()
# US States
all_states <- tigris::states(cb = T)
all_states <- all_states %>% filter(REGION != 9, !(STUSPS %in% c('AK','HI')))
View(all_states)
# US States
all_states <- tigris::states(cb = T, year = 2020)
# US States
all_states <- tigris::states(cb = T, year = 2019)
# US States
all_states <- tigris::states(cb = T, year = 2010)
View(all_states)
# US States
all_states <- tigris::states(cb = T, year = 2010)
View(all_states)
# US States
all_states <- tigris::states(cb = T, year = 2022)
# US States
all_states <- tigris::states(cb = T, year = 2023)
View(all_states)
all_states <- all_states %>%
filter(GEOID %in% fips_codes$state) %>%
filter(!(STUSPS %in% c('AK','HI')))
# US States
all_states <- tigris::states(cb = T, year = 2023)
all_states <- all_states %>%
filter(GEOID %in% fips_codes$state_code) %>%
filter(!(STUSPS %in% c('AK','HI')))
View(all_states)
all_states <- all_states %>%
filter(GEOID %in% fips_codes$state_code) %>%
filter(!(STUSPS %in% c('AS','MP','GU','VI','AK','HI')))
all_states <- all_states %>%
filter(GEOID %in% fips_codes$state_code) %>%
filter(!(STUSPS %in% c('AS','MP','GU','PR','VI','AK','HI')))
ggplot(all_states) +
geom_sf()
hurdat_sf <- st_as_sf(hurdat, coords = c('lon','lat'), crs = st_crs(all_states))
View(hurdat_sf)
ggplot(all_states) +
geom_sf() +
geom_sf(hurdat_sf)
ggplot(all_states) +
geom_sf() +
geom_sf(aes(hurdat_sf))
ggplot(all_states) +
geom_sf() +
geom_sf(data = hurdat_sf)
View(hurdat)
# Just keep the hurricanes in there since 2000 for now
hurdat <- hurdat %>%
filter(date > 20040000)
hurdat_sf <- st_as_sf(hurdat, coords = c('lon','lat'), crs = st_crs(all_states))
st_crs(hurdat_sf)
hurdat_max <- hurdat_sf %>%
filter(!is.na(max_wind_radii)) %>%
st_buffer(dist = max_wind_radii * 1.15078 * 1609.34)
hurdat_sf <- hurdat_sf %>% filter(!is.na(max_wind_radii))
# Project Title: Natural Disasters and Giving - Book Chapter
# Script Title: Clean HURDAT Data
# Contributor(s): Brenna Jungers, Evan Perry, Drew Westberg
# Last Revised: 2024-10-19
# Purpose: This script reads and prepares the HURDAT data.
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Read and Format HURDAT Data --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Read the HURDAT2 Data
hurdat <- read_delim("Data/hurdat/hurdat2-1851-2023-051124.txt", delim = ",", skip = 1, col_names = F)
# Add rownumbers
hurdat$rownum <- 1:nrow(hurdat)
# Warnings here are because it has rows in the data with only four columns
# as headers for each hurricane
tmp_header <- hurdat %>%
filter(substr(X1,1,1) == "A") %>%
select(X1,X2,X3,rownum) %>%
rename(stormid = X1, stormname = X2, stormnumber = X3) %>%
mutate(across(everything(), str_trim),
rownum = cumsum(rownum))
# Use rownumber to identify what rows we want here
hurdat <- hurdat %>%
mutate(rownum = ifelse(substr(X1,1,1) == "A", rownum, 0)) %>%
mutate(rownum = cumsum(rownum))
# Merge these together
hurdat <- hurdat %>%
left_join(tmp_header, by='rownum')
# The unmatched rows are from the first hurricane in 1851; we don't mind losing that
# Remove the rows with just the storm headers and clean the columns
hurdat <- hurdat %>%
filter(substr(X1,1,1) != "A") %>%
mutate(across(paste0("X",c(1:2,7:21)), as.numeric)) %>%
mutate(across(paste0("X",7:21), ~ ifelse(.x == -999, NA, .x)))
# Coordinates
hurdat <- hurdat %>%
mutate(
lat = as.numeric(str_remove(str_remove(X5, "N"), "S")),
lat = ifelse(str_detect(X5, "S"), -lat, lat),
lon = as.numeric(str_remove(str_remove(X6, "W"), "E")),
lon = ifelse(str_detect(X6, "W"), -lon, lon)
)
# Rename all the columns
hurdat <- hurdat %>%
rename(
date = X1,
time = X2,
record_status_id = X3,
storm_class = X4,
lat_str = X5,
lon_str = X6,
max_wind = X7,
min_pressure = X8,
ne_34kt_wind_radii = X9,
se_34kt_wind_radii = X10,
sw_34kt_wind_radii = X11,
nw_34kt_wind_radii = X12,
ne_50kt_wind_radii = X13,
se_50kt_wind_radii = X14,
sw_50kt_wind_radii = X15,
nw_50kt_wind_radii = X16,
ne_64kt_wind_radii = X17,
se_64kt_wind_radii = X18,
sw_64kt_wind_radii = X19,
nw_64kt_wind_radii = X20,
max_wind_radii = X21
)
# Just keep the hurricanes in there since 2000 for now
hurdat <- hurdat %>%
filter(date > 20040000)
rm(tmp_header)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Convert to Spatial -----------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# US States
all_states <- tigris::states(cb = T, year = 2023)
all_states <- all_states %>%
filter(GEOID %in% fips_codes$state_code) %>%
filter(!(STUSPS %in% c('AS','MP','GU','PR','VI','AK','HI')))
# Add geometry
hurdat_sf <- st_as_sf(hurdat, coords = c('lon','lat'), crs = st_crs(all_states))
# Write function to get the max wind speed zones
get_circ_zone <- function (i, x_df) {
x_sf_tmp <- x_df[i,]
x_sf_tmp = x_sf_tmp %>%
st_buffer(dist = x_df$max_wind_radii[i] * 1.15078 * 1609.34)
return(x_sf_tmp)
}
# Max wind speed zones
hurdat_max_sf <- hurdat_sf %>% filter(!is.na(max_wind_radii))
hurdat_max_sf <- lapply(1:nrow(hurdat_max_sf), ~ get_circ_zone(.x, hurdat_max_sf))
hurdat_max_sf <- lapply(1:nrow(hurdat_max_sf), function (x) get_circ_zone(x, hurdat_max_sf))
hurdat_max_sf <- bind_rows(hurdat_max_sf)
View(hurdat_max_sf)
ggplot(all_states) +
geom_sf() +
geom_sf(data = hurdat_max_sf[hurdat_max_sf$stormid == "AL202023",])
ggplot(all_states) +
geom_sf() +
geom_sf(data = hurdat_max_sf[hurdat_max_sf$stormid == "AL132023",])
ggplot(all_states) +
geom_sf() +
geom_sf(data = hurdat_max_sf[hurdat_max_sf$stormid == "AL082023",])
tm_shape(hurdat_max_sf[hurdat_max_sf$stormid == "AL082023",]) +
tm_polygons(col = "max_wind")
