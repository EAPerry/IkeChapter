position = position_dodge(.9))
models <- list("Output, basic" = basicdid[[1]],
"Output, interacted" = intdid[[1]],
"Density, basic" = basicdid[[2]],
"Density, interacted" = intdid[[2]],
"Dependence, basic" = basicdid[[3]],
"Dependence, interacted" = intdid[[3]])
#pdensity <-
ggcoef_compare(models, type = "f",
interaction_sep = " x ")
#pdensity <-
ggcoef_compare(models[c(1, 3, 5)], type = "f",
interaction_sep = " x ")
#pdensity <-
ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
pinteract <- ggcoef_compare(models[c(2, 4, 6)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_cont2 = "Log GC 2007"),
interaction_sep = " x ")
pinteract
pinteract <- ggcoef_compare(models[c(2, 4, 6)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
pinteract
poutput <- ggcoef_compare(models[c(1, 4)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
poutput <- ggcoef_compare(models[c(1, 4)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ",
categorical_terms_pattern = "{level}")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ",
categorical_terms_pattern = "{level}") +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(x = estimate_names, y = estimate, color = estimate_names)) +
geom_errorbar(aes(x = estimate_names, ymin = ci_low, ymax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(x = estimate_names, y = estimate, color = estimate_names)) +
geom_errorbar(aes(x = estimate_names, ymin = ci_low, ymax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_hline(yintercept = 0) +
geom_text(aes(label = round(estimate,2) , y = estimate, x = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names+1))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
source("C:/Users/bj993/Documents/GitHub/IkeChapter/Code/06_new_regressions.R")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATTxGC + ATT + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = NULL,
title = "Heterogenous Effects Through Contributions"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATTxGC + ATT + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = "Results/Regression Tables/blj_tabling_interactions.tex",
title = "Heterogenous Effects Through Contributions"
)
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
dev.off()
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
ATTxGC = "Disaster x Post x Log GC 2007")
poutput
poutput <- ggcoef_compare(models[1:2], type = "d",
)
poutput
poutput <- ggcoef_compare(models[1:2], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
poutput
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pbasic
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pbasic
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pinter
pbasic +
ggtitle("Basic Models")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post"))
pbasic +
ggtitle("Basic Models")
?ggarrange
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 1, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models") +
theme(legend.position = "none")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 2, common.legend = T)
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATT + ATTxGC + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = "Results/Regression Tables/blj_tabling_interactions.tex",
title = "Heterogenous Effects Through Contributions"
)
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post\\x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post\\n x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models") +
theme(legend.position = "none") +
xlab(NULL)
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none") +
xlab("Coefficient Estimate")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
#Alternate approach
ggcoef_table(models[[1]])
#Alternate approach
p.outb <- ggcoef_table(models[[1]])
p.outb <- ggcoef_table(models[[1]])
p.outi <- ggcoef_table(models[[2]])
p.denb <- ggcoef_table(models[[3]])
p.deni <- ggcoef_table(models[[4]])
p.depb <- ggcoef_table(models[[5]])
p.depi <- ggcoef_table(models[[6]])
cplots <- list(p.outb, p.outi, p.denb, p.deni, p.depb, p.depi)
ggarrange(cplots, nrow = 2)
ggarrange(unlist(cplots), nrow = 2)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2)
pdeni[1]
p.deni[1]
p.deni[2]
p.deni[[1]]
p.deni[[2]]
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate")
p.outi <- ggcoef_table(models[[2]], table_stat = "estimate")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate")
p.deni <- ggcoef_table(models[[4]], table_stat = "estimate")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate")
p.depi <- ggcoef_table(models[[6]], table_stat = "estimate")
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate")
p.outi <- ggcoef_table(models[[2]], table_stat = "estimate")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate")
p.deni <- ggcoef_table(models[[4]], table_stat = "estimate")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate")
p.depi <- ggcoef_table(models[[6]], table_stat = "estimate")
ggarrange(p.outb[[1]], p.denb[[1]], p.depb[[1]], p.outi[[1]], p.deni[[1]], p.depi[[1]],
nrow = 2)
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
ggarrange(p.outb[[1]], p.denb[[1]], p.depb[[1]], p.outi[[1]], p.deni[[1]], p.depi[[1]],
nrow = 2)
?ggarrange
ggarrange(p.outb[[1]], p.denb[[1]],
nrow = 2)
ggarrange(p.outb, p.denb[[1]],
nrow = 2)
ggarrange(p.outb, p.denb,
nrow = 2)
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
ggarrange(p.outb, p.denb,
nrow = 2)
ggarrange(p.outb, p.outi,
nrow = 2)
ggarrange(p.outb, p.outi,
nrow = 2, legend = "bottom", common.legend = T)
ggarrange(p.outb, p.outi,
nrow = 2, common.legend = T)
ggarrange(p.outb, p.outi,
nrow = 2, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_table(models[[1]], type = "d", table_stat = "estimate") + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate") + ggtitle("Density")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate") + ggtitle("Dependence")
ggarrange(p.outb, p.outi, p.denb, p.deni, p.depb, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_plot(models[[1]]) + ggtitle("Output")
p.outi <- ggcoef_plot(models[[2]])
p.denb <- ggcoef_plot(models[[3]]) + ggtitle("Density")
p.deni <- ggcoef_plot(models[[4]])
p.depb <- ggcoef_plot(models[[5]]) + ggtitle("Dependence")
p.depi <- ggcoef_plot(models[[6]])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
p.outb
?ggcoef_plot
#Alternate approach
p.outb <- ggcoef_model(models[[1]]) + ggtitle("Output")
p.outi <- ggcoef_model(models[[2]])
p.denb <- ggcoef_model(models[[3]]) + ggtitle("Density")
p.deni <- ggcoef_model(models[[4]])
p.depb <- ggcoef_model(models[[5]]) + ggtitle("Dependence")
p.depi <- ggcoef_model(models[[6]])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_model(models[[1]], show_p_values = F) + ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_model(models[[1]], add_reference_rows = F) + ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[[1]]) + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_compare(models[[c(1,2)]]) + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_compare(models[[c(1,2)]]) #+ ggtitle("Output")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
#Alternate approach
p.outb <- ggcoef_compare(models[c(1,2)]) #+ ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[c(1,2)], type = "d") #+ ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[1], type = "d") #+ ggtitle("Output")
p.outb
p.outb <- ggcoef_compare(models[1]) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2])
p.denb <- ggcoef_compare(models[3]) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4])
p.depb <- ggcoef_compare(models[5]) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(pinter))
pinter
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
#theme(legend.position = "none") +
xlab("Coefficient Estimate")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(pinter))
#Alternate approach
p.outb <- ggcoef_compare(models[1], colour = NULL) + ggtitle("Output")
p.outb
p.outb <- ggcoef_compare(models[1], colour = NULL) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2], colour = NULL)
p.denb <- ggcoef_compare(models[3], colour = NULL) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4], colour = NULL)
p.depb <- ggcoef_compare(models[5], colour = NULL) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6], colour = NULL)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#named vector to name variable labels
vlab <- c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = vlab) +
ggtitle("Basic Models") +
theme(legend.position = "none") +
xlab(NULL)
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = vlab) +
ggtitle("Full Models") +
#theme(legend.position = "none") +
xlab("Coefficient Estimate")
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2], colour = NULL, variable_labels = vlab)
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4], colour = NULL, variable_labels = vlab)
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6], colour = NULL, variable_labels = vlab)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output") + xlab("")
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density") + xlab("")
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence") + xlab("")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#named vector to name variable labels
vlab <- c(ATT = "Disaster x Post",
ATTxGC = " x Log GC 2007")
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output") + xlab("")
p.outi <- ggcoef_compare(models[2], colour = NULL, variable_labels = vlab)
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density") + xlab("")
p.deni <- ggcoef_compare(models[4], colour = NULL, variable_labels = vlab)
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence") + xlab("")
p.depi <- ggcoef_compare(models[6], colour = NULL, variable_labels = vlab)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(p.depi))
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
pinter
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)], type = "f", colour = NULL)))
?ggarrange
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)],
type = "f", colour = NULL))) +
annotate_figure(top = text_grob("Coefficient Plots", size = 14))
coefplots <- ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)],
type = "f",
colour = NULL)))
annotate_figure(coefplots, top = text_grob("Coefficient Plots", size = 14))
annotate_figure(coefplots, top = text_grob("Coefficient Plots", size = 18))
tinytex::install_tinytex()
models[[1]]$coefficients
models[[3]]$coefficients
models[[4]]$coefficients
