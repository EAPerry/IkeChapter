data = my_df)
mod5 <- lm(log(output) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(log(use) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod7 <- lm(dependence ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6, mod7)
my_SE <- lapply(my_models, do_the_SE)
stargazer(mod1, mod2, mod3, mod4, mod5, mod6, mod7,
title = paste("Hurricane Ike, Time Scaled---",
table_description, sep=""),
omit = c("factor","Constant"),
se = my_SE,
type = "latex",
order = c(
"treatment:tpost_D:tpost",
"treatment:tpost_D",
"treatment",
"tpost_D"
),
font.size = 'footnotesize',
covariate.labels = c(
"Disaster * Post Storm * Years After",
"Disaster * Post Storm",
"Disaster",
"Post Storm"
),
dep.var.labels = c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
),
omit.stat = c("rsq", "adj.rsq"),
out = paste("Results/Regression Tables/", table_output, sep = ""))
# Main Coefficient Reporting dataframe
model_num <- rep("Model 4", 7)
panel_type <- rep(table_description, 7)
outcome <- c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:tpost"],
mod2$coefficients["treatment:tpost_D:tpost"],
mod3$coefficients["treatment:tpost_D:tpost"],
mod4$coefficients["treatment:tpost_D:tpost"],
mod5$coefficients["treatment:tpost_D:tpost"],
mod6$coefficients["treatment:tpost_D:tpost"],
mod7$coefficients["treatment:tpost_D:tpost"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:tpost")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
mod4a_coefs <- regressions_4(df_storm, "Unbalanced", "reg4_unbalanced.tex")
mod4b_coefs <-regressions_4(b_df_storm, "Balanced", "reg4_balanced.tex")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Unbalanced vs. Balanced Panel ----------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
all_mods <- bind_rows(list(mod1a_coefs, mod1b_coefs,
mod2a_coefs, mod2b_coefs,
mod3a_coefs, mod3b_coefs, mod3c_coefs, mod3d_coefs,
mod3e_coefs, mod3f_coefs,
mod4a_coefs, mod4b_coefs))
png("Results/Robustness Checks/Panel Balance/Model1.png",
width=6, height=4, units="in", res=600)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Unbalanced vs. Balanced Panel ----------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
all_mods <- bind_rows(list(mod1a_coefs, mod1b_coefs,
mod2a_coefs, mod2b_coefs,
mod3a_coefs, mod3b_coefs, mod3c_coefs, mod3d_coefs,
mod3e_coefs, mod3f_coefs,
mod4a_coefs, mod4b_coefs))
png("Results/Robustness Checks/Panel Balance/Model1.png",
width=6, height=4, units="in", res=600)
ggplot(all_mods %>% filter(model == "Model 1"), x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x=NULL, y=NULL) +
theme_bw()
dev.off()
png("Results/Robustness Checks/Panel Balance/Model2.png",
width=6, height=4, units="in", res=600)
ggplot(all_mods %>% filter(model == "Model 2"), x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x=NULL, y=NULL) +
theme_bw()
dev.off()
temp <- all_mods %>%
filter(grepl("Model 30", model)) %>%
mutate(
Cutoff = paste(as.numeric(gsub("Model 30", "", model)) * 100, "%", sep="")
)
png("Results/Robustness Checks/Panel Balance/Model3.png",
width=8, height=4, units="in", res=600)
ggplot(temp, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI, color=Cutoff),
size=0.5, width=0.5, position=position_dodge(width = 1)) +
geom_point(aes(x=panel, y=coefs, color=Cutoff), size=2, position=position_dodge(width = 1)) +
geom_hline(color="black", yintercept = 0) +
scale_color_manual(values = natparks.pals("Yellowstone", 3)) +
labs(x=NULL, y=NULL) +
theme_bw()
dev.off()
png("Results/Robustness Checks/Panel Balance/Model4.png",
width=6, height=4, units="in", res=600)
ggplot(all_mods %>% filter(model == "Model 4"), x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x=NULL, y=NULL) +
theme_bw()
dev.off()
rm(all_mods, mod1a_coefs, mod1b_coefs, mod2a_coefs, mod2b_coefs,
mod3a_coefs, mod3b_coefs, mod3c_coefs, mod3d_coefs, mod3e_coefs, mod3f_coefs,
mod4a_coefs, mod4b_coefs, temp
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### First Set of Regressions --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_1 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
mod1 <- lm(log(density) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(concentration) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(wealth) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(distribution) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(output) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(log(use) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod7 <- lm(dependence ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6, mod7)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 1", 7)
panel_type <- rep(placebo_year, 7)
outcome <- c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D"],
mod2$coefficients["treatment:tpost_D"],
mod3$coefficients["treatment:tpost_D"],
mod4$coefficients["treatment:tpost_D"],
mod5$coefficients["treatment:tpost_D"],
mod6$coefficients["treatment:tpost_D"],
mod7$coefficients["treatment:tpost_D"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Second Set of Regressions --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_2 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
mod1 <- lm(log(density) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(concentration) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(wealth) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(distribution) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(output) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(log(use) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod7 <- lm(dependence ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6, mod7)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 2", 7)
panel_type <- rep(placebo_year, 7)
outcome <- c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:log(CONT)"],
mod2$coefficients["treatment:tpost_D:log(CONT)"],
mod3$coefficients["treatment:tpost_D:log(CONT)"],
mod4$coefficients["treatment:tpost_D:log(CONT)"],
mod5$coefficients["treatment:tpost_D:log(CONT)"],
mod6$coefficients["treatment:tpost_D:log(CONT)"],
mod7$coefficients["treatment:tpost_D:log(CONT)"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:log(CONT)")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Third Set of Regressions ---------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_3 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
# Dichotomize the contributions
my_df <- my_df %>%
group_by(year, treatment) %>%
mutate(
cont_dich = ifelse(CONT > quantile(CONT, probs = 0.5), 1, 0)
) %>%
ungroup
mod1 <- lm(log(density) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(concentration) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(wealth) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(distribution) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(output) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(log(use) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod7 <- lm(dependence ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6, mod7)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep(paste("Model 3", sep=""), 7)
panel_type <- rep(placebo_year, 7)
outcome <- c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:cont_dich"],
mod2$coefficients["treatment:tpost_D:cont_dich"],
mod3$coefficients["treatment:tpost_D:cont_dich"],
mod4$coefficients["treatment:tpost_D:cont_dich"],
mod5$coefficients["treatment:tpost_D:cont_dich"],
mod6$coefficients["treatment:tpost_D:cont_dich"],
mod7$coefficients["treatment:tpost_D:cont_dich"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:cont_dich")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Fourth Set of Regressions --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_4 <- function (my_df, placebo_year){
my_df <- my_df %>%
rowwise %>%
mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0),
tpost = max(year - placebo_year, 0)
)
mod1 <- lm(log(density) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(concentration) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(wealth) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(distribution) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(output) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(log(use) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod7 <- lm(dependence ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6, mod7)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 4", 7)
panel_type <- rep(placebo_year, 7)
outcome <- c(
"Density",
"Concentration",
"Wealth",
"Distribution",
"Output",
"Use",
"Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:tpost"],
mod2$coefficients["treatment:tpost_D:tpost"],
mod3$coefficients["treatment:tpost_D:tpost"],
mod4$coefficients["treatment:tpost_D:tpost"],
mod5$coefficients["treatment:tpost_D:tpost"],
mod6$coefficients["treatment:tpost_D:tpost"],
mod7$coefficients["treatment:tpost_D:tpost"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:tpost")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Actually run the placebo tests
placebo_years = list(2006, 2007, 2008, 2009, 2010)
placebos1 <- lapply(placebo_years, function (x) regressions_1(df_storm, x))
placebos2 <- lapply(placebo_years, function (x) regressions_2(df_storm, x))
placebos3 <- lapply(placebo_years, function (x) regressions_3(df_storm, x))
placebos4 <- lapply(placebo_years, function (x) regressions_4(df_storm, x))
placebos5 <- lapply(placebo_years, function (x) regressions_5(df_storm, x))
placebos1 <- bind_rows(placebos1)
placebos2 <- bind_rows(placebos2)
placebos3 <- bind_rows(placebos3)
placebos4 <- bind_rows(placebos4)
# Visualize the placebo tests
png("Results/Robustness Checks/Placebo Tests/set1.png", width=8, height = 4,
units="in", res=600)
ggplot(placebos1 , x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set2.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos2, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set3.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos3, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set4.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos4, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 3) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
gc()
