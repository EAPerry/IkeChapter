data = my_df)
mod4 <- lm(log(TOTASS/NONPROFITS) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(CONT/NONPROFITS) ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(cont_rev ~ treatment*tpost_D +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 1", 6)
panel_type <- rep(placebo_year, 6)
outcome <- c(
"Productivity",
"Concentration",
"Incomes",
"Wealth",
"Resource Use",
"Resource Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D"],
mod2$coefficients["treatment:tpost_D"],
mod3$coefficients["treatment:tpost_D"],
mod4$coefficients["treatment:tpost_D"],
mod5$coefficients["treatment:tpost_D"],
mod6$coefficients["treatment:tpost_D"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Second Set of Regressions --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_2 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
mod1 <- lm(log(exps_npo) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(pop/NONPROFITS) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(TOTREV/NONPROFITS) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(TOTASS/NONPROFITS) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(CONT/NONPROFITS) ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(cont_rev ~ treatment*tpost_D*log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 2", 6)
panel_type <- rep(placebo_year, 6)
outcome <- c(
"Productivity",
"Concentration",
"Incomes",
"Wealth",
"Resource Use",
"Resource Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:log(CONT)"],
mod2$coefficients["treatment:tpost_D:log(CONT)"],
mod3$coefficients["treatment:tpost_D:log(CONT)"],
mod4$coefficients["treatment:tpost_D:log(CONT)"],
mod5$coefficients["treatment:tpost_D:log(CONT)"],
mod6$coefficients["treatment:tpost_D:log(CONT)"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:log(CONT)")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Third Set of Regressions ---------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_3 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
# Dichotomize the contributions
my_df <- my_df %>%
group_by(year, treatment) %>%
mutate(
cont_dich = ifelse(CONT > quantile(CONT, probs = 0.5), 1, 0)
) %>%
ungroup
mod1 <- lm(log(exps_npo) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(pop/NONPROFITS) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(TOTREV/NONPROFITS) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(TOTASS/NONPROFITS) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(CONT/NONPROFITS) ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(cont_rev ~ treatment*tpost_D*cont_dich +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep(paste("Model 3", sep=""), 6)
panel_type <- rep(placebo_year, 6)
outcome <- c(
"Productivity",
"Concentration",
"Incomes",
"Wealth",
"Resource Use",
"Resource Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:cont_dich"],
mod2$coefficients["treatment:tpost_D:cont_dich"],
mod3$coefficients["treatment:tpost_D:cont_dich"],
mod4$coefficients["treatment:tpost_D:cont_dich"],
mod5$coefficients["treatment:tpost_D:cont_dich"],
mod6$coefficients["treatment:tpost_D:cont_dich"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:cont_dich")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Fourth Set of Regressions --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_4 <- function (my_df, placebo_year){
my_df <- my_df %>%
rowwise %>%
mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0),
tpost = max(year - placebo_year, 0)
)
mod1 <- lm(log(exps_npo) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(pop/NONPROFITS) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(TOTREV/NONPROFITS) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(TOTASS/NONPROFITS) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(CONT/NONPROFITS) ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(cont_rev ~ treatment*tpost_D + treatment:tpost_D:tpost +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 4", 6)
panel_type <- rep(placebo_year, 6)
outcome <- c(
"Productivity",
"Concentration",
"Incomes",
"Wealth",
"Resource Use",
"Resource Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:tpost"],
mod2$coefficients["treatment:tpost_D:tpost"],
mod3$coefficients["treatment:tpost_D:tpost"],
mod4$coefficients["treatment:tpost_D:tpost"],
mod5$coefficients["treatment:tpost_D:tpost"],
mod6$coefficients["treatment:tpost_D:tpost"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:tpost")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
### Fifth Set of Regressions ---------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
regressions_5 <- function (my_df, placebo_year){
my_df <- my_df %>% mutate(
year = as.numeric(year) + 1999,
tpost_D = ifelse(year >= placebo_year, 1, 0)
)
mod1 <- lm(log(exps_npo) ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod2 <- lm(log(pop/NONPROFITS) ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod3 <- lm(log(TOTREV/NONPROFITS) ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod4 <- lm(log(TOTASS/NONPROFITS) ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod5 <- lm(log(CONT/NONPROFITS) ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
mod6 <- lm(cont_rev ~ treatment*tpost_D +
treatment:tpost_D:log(CONT) +
as.factor(year) + as.factor(FIPS),
data = my_df)
my_models = list(mod1, mod2, mod3, mod4, mod5, mod6)
my_SE <- lapply(my_models, do_the_SE)
# Main Coefficient Reporting dataframe
model_num <- rep("Model 5", 6)
panel_type <- rep(placebo_year, 6)
outcome <- c(
"Productivity",
"Concentration",
"Incomes",
"Wealth",
"Resource Use",
"Resource Dependence"
)
main_coefs <- c(
mod1$coefficients["treatment:tpost_D:log(CONT)"],
mod2$coefficients["treatment:tpost_D:log(CONT)"],
mod3$coefficients["treatment:tpost_D:log(CONT)"],
mod4$coefficients["treatment:tpost_D:log(CONT)"],
mod5$coefficients["treatment:tpost_D:log(CONT)"],
mod6$coefficients["treatment:tpost_D:log(CONT)"]
)
term_names <- data.frame(summary(mod1)$aliased)
term_names <- rownames(term_names)
main_se <- lapply(my_SE, function (x) data.frame(term_names, x))
main_se <- bind_rows(main_se)
main_se <- main_se %>%
filter(term_names == "treatment:tpost_D:log(CONT)")
main_se <- main_se$x
out_df <- data.frame(model_num, panel_type, outcome, main_coefs, main_se)
colnames(out_df) <- c("model","panel","outcome","coefs","se")
out_df <- out_df %>%
mutate(
lower_CI = coefs - 1.96*se,
upper_CI = coefs + 1.96*se
)
return(out_df)
}
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Actually run the placebo tests
placebo_years = list(2006, 2007, 2008, 2009, 2010)
placebos1 <- lapply(placebo_years, function (x) regressions_1(df_storm, x))
placebos2 <- lapply(placebo_years, function (x) regressions_2(df_storm, x))
placebos3 <- lapply(placebo_years, function (x) regressions_3(df_storm, x))
placebos4 <- lapply(placebo_years, function (x) regressions_4(df_storm, x))
placebos5 <- lapply(placebo_years, function (x) regressions_5(df_storm, x))
placebos1 <- bind_rows(placebos1)
placebos2 <- bind_rows(placebos2)
placebos3 <- bind_rows(placebos3)
placebos4 <- bind_rows(placebos4)
placebos5 <- bind_rows(placebos5)
# Visualize the placebo tests
png("Results/Robustness Checks/Placebo Tests/set1.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos1 , x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 2) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set2.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos2, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 2) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set3.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos3, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 2) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set4.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos4, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 2) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
png("Results/Robustness Checks/Placebo Tests/set5.png", width=7, height = 4,
units="in", res=600)
ggplot(placebos5, x=panel, y=coefs) +
facet_wrap(vars(outcome), scales="free", nrow = 2) +
geom_errorbar(aes(x=panel, ymin = lower_CI, ymax = upper_CI),
color = natparks.pals("Yellowstone", 1),
size=0.5, width=0.5) +
geom_point(aes(x=panel, y=coefs), color = natparks.pals("Yellowstone", 1),
size=2) +
geom_hline(color="black", yintercept = 0) +
labs(x="\nPlacebo Year (2008 = Actual Treatment Year)", y="Coefficient Estimate\n") +
theme_bw()
dev.off()
gc()
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
## Event Studies --------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df <- main_df
df$center_year <- df$year - 2007
df <- df %>% mutate(center_year = ifelse(center_year==0, -20, center_year))
df <- df %>%
mutate(
log_exps_npo = log(EXPS/NONPROFITS),
log_pop_npo = log(pop/NONPROFITS),
log_rev_npo = log(TOTREV/NONPROFITS),
log_ass_npo = log(TOTASS/NONPROFITS),
log_cont_npo = log(cont_npo),
log_cont_rev = log(cont_rev)
)
# Regular Event Study
run_event_study <- function(out_var, variable_lab, file_name){
my_cols <- c("FIPS", "center_year", "treatment", "pop", out_var)
my_df <- df[my_cols]
colnames(my_df) <- c("FIPS", "center_year", "treatment", "pop", "outcome")
temp <- lm(outcome ~ treatment*as.factor(center_year) + FIPS,
data = my_df,
weights = pop)
temp <- summary(temp)
temp <- data.frame(temp$coefficients)
temp$var <- rownames(temp)
rownames(temp) <- NULL
temp <- temp[grepl(":", temp$var),]
temp[nrow(temp) +1,] <- c(0, 0, 0, 0, "0")
temp <- temp %>%
rowwise %>%
mutate(
estimate = as.numeric(Estimate),
std_err = as.numeric(`Std..Error`),
period = as.integer(gsub(".*)", "", var)),
ci_lower = estimate - 1.96 * std_err,
ci_upper = estimate + 1.96 * std_err
)
print({
ggplot(temp, aes(x = period + 2007, y = estimate)) +
geom_vline(xintercept = 2007, color="grey") +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size=0.5, width=0.5,
color = natparks.pals("Yellowstone", 1)) +
geom_point(aes(x=period + 2007, y=estimate), size=2,
color = natparks.pals("Yellowstone", 1)) +
geom_line(color = natparks.pals("Yellowstone", 1)) +
labs(x="\nYear (2007 = Pre-Storm Benchmark)",
y = "Estimated Effect\n") +
geom_hline(yintercept=0) +
ggtitle(label = variable_lab) +
theme_bw()
ggsave(paste("Results/Figures/Ike Event Studies/Population Weighted/",
file_name, ".png", sep=""), width = 6, height = 4, units='in')
})
}
run_event_study("log_exps_npo", "log(Expenses/Nonprofit)", "Outcome1")
run_event_study("log_pop_npo", "log(Population/Nonprofit)", "Outcome2")
run_event_study("log_rev_npo", "log(Revenues/Nonprofit)", "Outcome3")
run_event_study("log_ass_npo", "log(Assets/Nonprofit)", "Outcome4")
run_event_study("log_cont_npo", "log(Contributions/Nonprofit)", "Outcome5")
run_event_study("log_cont_rev", "log(Contributions/Revenue)", "Outcome6")
# Contribution Scaled -- Interpretation Challenged -- Event Study
run_event_study_2 <- function(out_var, variable_lab, file_name){
my_cols <- c("FIPS", "center_year", "treatment", "CONT", out_var)
my_df <- df[my_cols]
colnames(my_df) <- c("FIPS", "center_year", "treatment", "cont", "outcome")
temp <- lm(outcome ~ treatment*as.factor(center_year)*cont + FIPS,
data = my_df)
temp <- summary(temp)
temp <- data.frame(temp$coefficients)
temp$var <- rownames(temp)
rownames(temp) <- NULL
temp <- temp[(grepl("treatment", temp$var)) &
(grepl("cont", temp$var)) &
(grepl("center", temp$var)),]
temp[nrow(temp) +1,] <- c(0, 0, 0, 0, "0")
temp <- temp %>%
rowwise %>%
mutate(
estimate = as.numeric(Estimate) * 1000000000,
std_err = as.numeric(`Std..Error`) * 1000000000,
period = gsub(".*)", "", var),
period = as.integer(gsub(":.*", "", period)),
ci_lower = estimate - 1.96 * std_err,
ci_upper = estimate + 1.96 * std_err
)
print({
ggplot(temp, aes(x = period + 2007, y = estimate)) +
geom_vline(xintercept = 2007, color="grey") +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size=0.5, width=0.5,
color = natparks.pals("Yellowstone", 1)) +
geom_point(aes(x=period + 2007, y=estimate), size=2,
color = natparks.pals("Yellowstone", 1)) +
geom_line(color = natparks.pals("Yellowstone", 1)) +
labs(x="\nYear (2007 = Pre-Storm Benchmark)",
y = "Estimated Effect\n") +
geom_hline(yintercept=0) +
ggtitle(label = variable_lab) +
theme_bw()
ggsave(paste("Results/Figures/Ike Event Studies/Contribution Scaled/",
file_name, ".png", sep=""),
width = 6, height = 4, units='in')
})
}
run_event_study_2("log_exps_npo", "log(Expenses/Nonprofit)", "Outcome1")
run_event_study_2("log_pop_npo", "log(Population/Nonprofit)", "Outcome2")
run_event_study_2("log_rev_npo", "log(Revenues/Nonprofit)", "Outcome3")
run_event_study_2("log_ass_npo", "log(Assets/Nonprofit)", "Outcome4")
run_event_study_2("log_cont_npo", "log(Contributions/Nonprofit)", "Outcome5")
run_event_study_2("log_cont_rev", "log(Contributions/Revenue)", "Outcome6")
rm(df, run_event_study, run_event_study_2)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
