position = position_dodge(.9))
models <- list("Output, basic" = basicdid[[1]],
"Output, interacted" = intdid[[1]],
"Density, basic" = basicdid[[2]],
"Density, interacted" = intdid[[2]],
"Dependence, basic" = basicdid[[3]],
"Dependence, interacted" = intdid[[3]])
#pdensity <-
ggcoef_compare(models, type = "f",
interaction_sep = " x ")
#pdensity <-
ggcoef_compare(models[c(1, 3, 5)], type = "f",
interaction_sep = " x ")
#pdensity <-
ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
pinteract <- ggcoef_compare(models[c(2, 4, 6)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_cont2 = "Log GC 2007"),
interaction_sep = " x ")
pinteract
pinteract <- ggcoef_compare(models[c(2, 4, 6)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
pinteract
poutput <- ggcoef_compare(models[c(1, 4)], type = "f",
variable_labels = c(ATT = "Disaster x Post"),
interaction_sep = " x ")
poutput <- ggcoef_compare(models[c(1, 4)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ",
categorical_terms_pattern = "{level}")
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ",
categorical_terms_pattern = "{level}") +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
poutput
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(x = estimate_names, y = estimate, color = estimate_names)) +
geom_errorbar(aes(x = estimate_names, ymin = ci_low, ymax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(x = estimate_names, y = estimate, color = estimate_names)) +
geom_errorbar(aes(x = estimate_names, ymin = ci_low, ymax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_hline(yintercept = 0) +
geom_text(aes(label = round(estimate,2) , y = estimate, x = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names+1))
ggplot(all_coefs) +
geom_point(aes(y = estimate_names, x = estimate, color = estimate_names)) +
geom_errorbarh(aes(y = estimate_names, xmin = ci_low, xmax = ci_high, color = estimate_names)) +
facet_grid(model ~ outcome, scales = "free") +
geom_vline(xintercept = 0) +
geom_text(aes(label = round(estimate,2) , x = estimate, y = estimate_names),
position = position_dodge(.9))
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
source("C:/Users/bj993/Documents/GitHub/IkeChapter/Code/06_new_regressions.R")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATTxGC + ATT + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = NULL,
title = "Heterogenous Effects Through Contributions"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATTxGC + ATT + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = "Results/Regression Tables/blj_tabling_interactions.tex",
title = "Heterogenous Effects Through Contributions"
)
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
dev.off()
models <- list("Basic Model" = basicdid[[1]],
"Full Model" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
poutput <- ggcoef_compare(models[1:2], type = "f",
variable_labels = c(ATT = "Disaster x Post",
log_fixedcont2 = "Log GC 2007"),
interaction_sep = " x ")
poutput +
scale_x_discrete(labels = function(x) ifelse(x == "Disaster x Post x log_fixedcont2", "", x))
ATTxGC = "Disaster x Post x Log GC 2007")
poutput
poutput <- ggcoef_compare(models[1:2], type = "d",
basicdid <- my_table(
rhs = "post:treatment",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df,
filename = "Results/Regression Tables/eap_twfe.tex",
title = "Baseline TWFE"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Interaction with GC Scale ----------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Both of these will use the version where
# dependence = (cont - grants - govservices) / cont * 100
# and where
# contributions = cont - grants - govservices
## Some of the interactions ----------------------------------------------------
# # Do not center the contributions scaling variable
# intdid <- my_table(
#   rhs = "ATT*log_fixedcont2 + ATT + treatment + post + log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_thru_2007cont.tex",
#   title = "Heterogenous Effects Through Contributions"
# )
#
# # Center the contributions scaling variable
# intdid_centered <- my_table(
#   rhs = "ATT*log_fixedcont2_centered + ATT + treatment + post + log_fixedcont2_centered",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2_centered)),
#   filename = "Results/Regression Tables/eap_thru_2007cont_centered.tex",
#   title = "Heterogenous Effects Through Contributions (Centered)"
# )
# # lol actually maybe i'm just dumb and centering it doesn't make any difference;
# # the scaling coefficient doesn't change, just the difference coefficient...
#
#
# ## All of the interactions -----------------------------------------------------
#
# # Do not center the contributions scaling variable
# intdid_allint <- my_table(
#   rhs = "post*treatment*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_intdid_allint.tex",
#   title = "Heterogenous Effects Through Contributions -- All Interactions"
# )
#
# ## Check dependence measures ---------------------------------------------------
#
# # Do not center the contributions scaling variable
# dep1 <- my_table_dependence(
#   rhs = "ATT*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_dep1.tex",
#   title = "Heterogenous Effects Through Contributions, Various Dependence"
# )
#
# dep2 <- my_table_dependence(
#   rhs = "treatment*post*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_dep2.tex",
#   title = "Heterogenous Effects Through Contributions, Various Dependence, All Interactions"
# )
## Adjust dependence variable & all interactions -------------------------------
# Try using the other dependence measure again: (giving / revenue), but with all
# the interactions this time
intdid <- my_table(
rhs = "post*treatment*log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)),
filename = "Results/Regression Tables/eap_twfe_int.tex",
title = "Heterogenous Effects Through Contributions"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Project Title: Natural Disasters and Giving - Book Chapter
# Script Title: New Regressions
# Contributor(s): Brenna Jungers, Evan Perry, Drew Westberg
# Last Revised: 2024-05-27
# Purpose: This script runs the new regressions.
# Clear environment
rm(list = ls())
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Helper Functions -------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Run the regression of choice
my_reg <- function(outcome, rhs, fe, sample_df){
f = as.formula(paste(outcome, '~', rhs, "|", fe))
reg_results = feols(f, sample_df, vcov = "hc1")
return(reg_results)
}
# Make the table but using the dependence variable that's computed as
# dependence = (giving / revenue)
my_table <- function(rhs, fe, sample_df, filename, title) {
outcome_list <- list("log_output","log_density","dependence2")
var_labs_alt <- var_labs
all_models <- lapply(outcome_list, function (x) my_reg(x , rhs, fe, sample_df))
unlink(filename)
etable(all_models,
vcov = "hc1",
tex = T,
title = title,
file = filename,
dict = var_labs_alt,
order = c("Disaster", "Post", "log GC"),
adjustbox = "max width = \\textwidth, center",
view = T
)
poutput
poutput <- ggcoef_compare(models[1:2], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
poutput
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pbasic
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "f",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pbasic
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007"))
pinter
pbasic +
ggtitle("Basic Models")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post"))
pbasic +
ggtitle("Basic Models")
?ggarrange
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 1, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models") +
theme(legend.position = "none")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, legend.grob = get_legend(pinter))
ggarrange(pbasic, pinter, nrow = 2, common.legend = T)
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Coefficient Plots ------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Re-estimate to manually include interaction terms for plotting
intdid <- my_table(
rhs = "ATT + ATTxGC + treatment + post + log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)) %>% mutate(ATTxGC = ATT*log_fixedcont2),
filename = "Results/Regression Tables/blj_tabling_interactions.tex",
title = "Heterogenous Effects Through Contributions"
)
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "... x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post\\x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "Disaster x Post\\n x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = c(ATT = "Disaster x Post")) +
ggtitle("Basic Models") +
theme(legend.position = "none") +
xlab(NULL)
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
theme(legend.position = "none") +
xlab("Coefficient Estimate")
ggarrange(pbasic, pinter, nrow = 2, common.legend = T, legend = "bottom")
#Alternate approach
ggcoef_table(models[[1]])
#Alternate approach
p.outb <- ggcoef_table(models[[1]])
p.outb <- ggcoef_table(models[[1]])
p.outi <- ggcoef_table(models[[2]])
p.denb <- ggcoef_table(models[[3]])
p.deni <- ggcoef_table(models[[4]])
p.depb <- ggcoef_table(models[[5]])
p.depi <- ggcoef_table(models[[6]])
cplots <- list(p.outb, p.outi, p.denb, p.deni, p.depb, p.depi)
ggarrange(cplots, nrow = 2)
ggarrange(unlist(cplots), nrow = 2)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2)
pdeni[1]
p.deni[1]
p.deni[2]
p.deni[[1]]
p.deni[[2]]
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate")
p.outi <- ggcoef_table(models[[2]], table_stat = "estimate")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate")
p.deni <- ggcoef_table(models[[4]], table_stat = "estimate")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate")
p.depi <- ggcoef_table(models[[6]], table_stat = "estimate")
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate")
p.outi <- ggcoef_table(models[[2]], table_stat = "estimate")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate")
p.deni <- ggcoef_table(models[[4]], table_stat = "estimate")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate")
p.depi <- ggcoef_table(models[[6]], table_stat = "estimate")
ggarrange(p.outb[[1]], p.denb[[1]], p.depb[[1]], p.outi[[1]], p.deni[[1]], p.depi[[1]],
nrow = 2)
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
ggarrange(p.outb[[1]], p.denb[[1]], p.depb[[1]], p.outi[[1]], p.deni[[1]], p.depi[[1]],
nrow = 2)
?ggarrange
ggarrange(p.outb[[1]], p.denb[[1]],
nrow = 2)
ggarrange(p.outb, p.denb[[1]],
nrow = 2)
ggarrange(p.outb, p.denb,
nrow = 2)
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
ggarrange(p.outb, p.denb,
nrow = 2)
ggarrange(p.outb, p.outi,
nrow = 2)
ggarrange(p.outb, p.outi,
nrow = 2, legend = "bottom", common.legend = T)
ggarrange(p.outb, p.outi,
nrow = 2, common.legend = T)
ggarrange(p.outb, p.outi,
nrow = 2, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_table(models[[1]], type = "d", table_stat = "estimate") + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_table(models[[1]], table_stat = "estimate") + ggtitle("Output")
p.denb <- ggcoef_table(models[[3]], table_stat = "estimate") + ggtitle("Density")
p.depb <- ggcoef_table(models[[5]], table_stat = "estimate") + ggtitle("Dependence")
ggarrange(p.outb, p.outi, p.denb, p.deni, p.depb, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_plot(models[[1]]) + ggtitle("Output")
p.outi <- ggcoef_plot(models[[2]])
p.denb <- ggcoef_plot(models[[3]]) + ggtitle("Density")
p.deni <- ggcoef_plot(models[[4]])
p.depb <- ggcoef_plot(models[[5]]) + ggtitle("Dependence")
p.depi <- ggcoef_plot(models[[6]])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
p.outb
?ggcoef_plot
#Alternate approach
p.outb <- ggcoef_model(models[[1]]) + ggtitle("Output")
p.outi <- ggcoef_model(models[[2]])
p.denb <- ggcoef_model(models[[3]]) + ggtitle("Density")
p.deni <- ggcoef_model(models[[4]])
p.depb <- ggcoef_model(models[[5]]) + ggtitle("Dependence")
p.depi <- ggcoef_model(models[[6]])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_model(models[[1]], show_p_values = F) + ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_model(models[[1]], add_reference_rows = F) + ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[[1]]) + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_compare(models[[c(1,2)]]) + ggtitle("Output")
#Alternate approach
p.outb <- ggcoef_compare(models[[c(1,2)]]) #+ ggtitle("Output")
models <- list("Output" = basicdid[[1]],
"Output" = intdid[[1]],
"Density" = basicdid[[2]],
"Density" = intdid[[2]],
"Dependence" = basicdid[[3]],
"Dependence" = intdid[[3]])
#Alternate approach
p.outb <- ggcoef_compare(models[c(1,2)]) #+ ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[c(1,2)], type = "d") #+ ggtitle("Output")
p.outb
#Alternate approach
p.outb <- ggcoef_compare(models[1], type = "d") #+ ggtitle("Output")
p.outb
p.outb <- ggcoef_compare(models[1]) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2])
p.denb <- ggcoef_compare(models[3]) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4])
p.depb <- ggcoef_compare(models[5]) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6])
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(pinter))
pinter
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")) +
ggtitle("Full Models") +
#theme(legend.position = "none") +
xlab("Coefficient Estimate")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(pinter))
#Alternate approach
p.outb <- ggcoef_compare(models[1], colour = NULL) + ggtitle("Output")
p.outb
p.outb <- ggcoef_compare(models[1], colour = NULL) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2], colour = NULL)
p.denb <- ggcoef_compare(models[3], colour = NULL) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4], colour = NULL)
p.depb <- ggcoef_compare(models[5], colour = NULL) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6], colour = NULL)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#named vector to name variable labels
vlab <- c(ATT = "Disaster x Post",
ATTxGC = "  x Log GC 2007")
pbasic <- ggcoef_compare(models[c(1, 3, 5)], type = "d",
variable_labels = vlab) +
ggtitle("Basic Models") +
theme(legend.position = "none") +
xlab(NULL)
pinter <- ggcoef_compare(models[c(2, 4, 6)], type = "d",
variable_labels = vlab) +
ggtitle("Full Models") +
#theme(legend.position = "none") +
xlab("Coefficient Estimate")
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output")
p.outi <- ggcoef_compare(models[2], colour = NULL, variable_labels = vlab)
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density")
p.deni <- ggcoef_compare(models[4], colour = NULL, variable_labels = vlab)
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence")
p.depi <- ggcoef_compare(models[6], colour = NULL, variable_labels = vlab)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#Alternate approach
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output") + xlab("")
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density") + xlab("")
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence") + xlab("")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
#named vector to name variable labels
vlab <- c(ATT = "Disaster x Post",
ATTxGC = " x Log GC 2007")
p.outb <- ggcoef_compare(models[1], colour = NULL, variable_labels = vlab) + ggtitle("Output") + xlab("")
p.outi <- ggcoef_compare(models[2], colour = NULL, variable_labels = vlab)
p.denb <- ggcoef_compare(models[3], colour = NULL, variable_labels = vlab) + ggtitle("Density") + xlab("")
p.deni <- ggcoef_compare(models[4], colour = NULL, variable_labels = vlab)
p.depb <- ggcoef_compare(models[5], colour = NULL, variable_labels = vlab) + ggtitle("Dependence") + xlab("")
p.depi <- ggcoef_compare(models[6], colour = NULL, variable_labels = vlab)
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(p.depi))
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom")
pinter
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)], type = "f", colour = NULL)))
?ggarrange
ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)],
type = "f", colour = NULL))) +
annotate_figure(top = text_grob("Coefficient Plots", size = 14))
coefplots <- ggarrange(p.outb, p.denb, p.depb, p.outi, p.deni, p.depi,
nrow = 2, ncol = 3, common.legend = T, legend = "bottom",
legend.grob = get_legend(ggcoef_compare(models[c(2, 4, 6)],
type = "f",
colour = NULL)))
annotate_figure(coefplots, top = text_grob("Coefficient Plots", size = 14))
annotate_figure(coefplots, top = text_grob("Coefficient Plots", size = 18))
tinytex::install_tinytex()
models[[1]]$coefficients
models[[3]]$coefficients
models[[4]]$coefficients
# Read in and final data prep --------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df <- read_csv('Results/cleaned_filtered_data.csv')
# Give some log transforms to the data (a little treat)
df <- df %>%
mutate(
log_output = log(output),
log_density = log(density),
log_fixedcont = log(fixedcont),
log_fixedcont2 = log(fixedcont2),
log_pop = log(pop),
ATT = post*treatment              #specify ATT for marginal effects plotting
)
# # Create centered versions of the scaling variable(s)
# center1 <- df %>% filter(is.finite(log(fixedcont)))
# center1 <- mean(log(center1$fixedcont))
# center2 <- df %>% filter(fixedcont2> 0) %>% filter(is.finite(log(fixedcont2)))
# center2 <- mean(log(center2$fixedcont2))
#
# df <- df %>%
#   mutate(
#     log_fixedcont_centered = log_fixedcont - center1,
#     log_fixedcont2_centered = log_fixedcont2 - center2
#   )
# rm(center1, center2)
# And make a little data dictionary
var_labs <- c(
`as.factor(year)` = "Year",
`as.factor(FIPS)` = "County",
treatment = "Disaster",
post = "Post",
tpost = "Years Post",
log_fixedcont = "log GC$_{2007}$",
log_fixedcont2 = "log GC$_{2007}$",
log_output = "log Output",
log_density = "log Density",
dependence = "Dependence",
dependence2 = "Dependence",
dependence3 = "Dependence",
log_pop = "log Population",
# log_fixedcont_centered = "log GC$_{2007}$ (Centered)",
# log_fixedcont2_centered = "log GC$_{2007}$ (Centered)",
# ATT = "average treatment effect on the treated"
ATT = "Disaster $\\times$ Post"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Basic DiD --------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
basicdid <- my_table(
rhs = "post:treatment",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df,
filename = "Results/Regression Tables/eap_twfe.tex",
title = "Baseline TWFE"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Interaction with GC Scale ----------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Both of these will use the version where
# dependence = (cont - grants - govservices) / cont * 100
# and where
# contributions = cont - grants - govservices
## Some of the interactions ----------------------------------------------------
# # Do not center the contributions scaling variable
# intdid <- my_table(
#   rhs = "ATT*log_fixedcont2 + ATT + treatment + post + log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_thru_2007cont.tex",
#   title = "Heterogenous Effects Through Contributions"
# )
#
# # Center the contributions scaling variable
# intdid_centered <- my_table(
#   rhs = "ATT*log_fixedcont2_centered + ATT + treatment + post + log_fixedcont2_centered",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2_centered)),
#   filename = "Results/Regression Tables/eap_thru_2007cont_centered.tex",
#   title = "Heterogenous Effects Through Contributions (Centered)"
# )
# # lol actually maybe i'm just dumb and centering it doesn't make any difference;
# # the scaling coefficient doesn't change, just the difference coefficient...
#
#
# ## All of the interactions -----------------------------------------------------
#
# # Do not center the contributions scaling variable
# intdid_allint <- my_table(
#   rhs = "post*treatment*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_intdid_allint.tex",
#   title = "Heterogenous Effects Through Contributions -- All Interactions"
# )
#
# ## Check dependence measures ---------------------------------------------------
#
# # Do not center the contributions scaling variable
# dep1 <- my_table_dependence(
#   rhs = "ATT*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_dep1.tex",
#   title = "Heterogenous Effects Through Contributions, Various Dependence"
# )
#
# dep2 <- my_table_dependence(
#   rhs = "treatment*post*log_fixedcont2",
#   fe = "as.factor(year) + as.factor(FIPS)",
#   sample_df = df %>% filter(is.finite(log_fixedcont2)),
#   filename = "Results/Regression Tables/eap_dep2.tex",
#   title = "Heterogenous Effects Through Contributions, Various Dependence, All Interactions"
# )
## Adjust dependence variable & all interactions -------------------------------
# Try using the other dependence measure again: (giving / revenue), but with all
# the interactions this time
intdid <- my_table(
rhs = "post*treatment*log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)),
filename = "Results/Regression Tables/eap_twfe_int.tex",
title = "Heterogenous Effects Through Contributions"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Basic DiD --------------------------------------------------------------------
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
basicdid <- my_table(
rhs = "post:treatment",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df,
filename = "Results/Regression Tables/eap_twfe.tex",
title = "Baseline TWFE"
)
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
intdid <- my_table(
rhs = "post*treatment*log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)),
filename = "Results/Regression Tables/eap_twfe_int.tex",
title = "Heterogenous Effects Through Contributions"
)
# Try using the other dependence measure again: (giving / revenue), but with all
# the interactions this time
intdid <- my_table(
rhs = "ATT:log_fixedcont2 + post:treatment + post:log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)),
filename = "Results/Regression Tables/eap_twfe_int.tex",
title = "Heterogenous Effects Through Contributions"
)
model2_coefs <- coefplot(intdid)[['prms']] %>%
filter(str_detect(estimate_names, "ATT"))
model2_coefs$outcome <- c("Output", "Density", "Dependence")
model2_coefs$model <- 2
my_coefs <- bind_rows(model2_coefs)
my_coefs <- my_coefs %>%
mutate(y = case_when(
outcome != "Dependence" & estimate_names == "ATT"  ~ (exp(y) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(y) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ y,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ y * log(1.1)
),
ci_low = case_when(
outcome != "Dependence" & estimate_names == "ATT" ~ (exp(ci_low) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(ci_low) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ ci_low,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont" ~ ci_low * log(1.1)
),
ci_high = case_when(
outcome != "Dependence" & estimate_names == "ATT" ~ (exp(ci_high) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(ci_high) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ ci_high,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ ci_high * log(1.1)
))
my_coefs$outcome <- factor(my_coefs$outcome,
levels = c("Output", "Density", "Dependence"))
my_coefs$beta_hat <- paste0(my_coefs$model, my_coefs$estimate_names)
tikzDevice::tikz("Results/Figures/coef_plot.tex", height = 2.5, width = 6)
ggplot(my_coefs) +
geom_point(aes(y = as.factor(beta_hat), x = y, color = as.factor(beta_hat))) +
geom_errorbar(aes(y = as.factor(beta_hat), xmin = ci_low, xmax = ci_high, color = as.factor(beta_hat))) +
facet_wrap(~outcome, scales = "free_x",
labeller = as_labeller(
c(Output = "\\%-Change in Output",
Density = "\\%-Change in Density",
Dependence = "\\%-Point Change in Dependence")),
strip.position = "top") +
labs(x = NULL) +
labs(y = "") +
scale_color_discrete(labels = c("Disaster times Post",
"Disaster times Post times Log GC")) +
theme(strip.background = element_blank(), strip.placement = "outside",
legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y=element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank()) +
guides(color=guide_legend(nrow=1,byrow=TRUE))
dev.off()
model2_coefs <- coefplot(intdid)[['prms']] %>%
filter(str_detect(estimate_names, "ATT"))
model2_coefs$outcome <- c("Output", "Density", "Dependence")
model2_coefs$model <- 2
View(model2_coefs)
my_coefs <- bind_rows(model2_coefs)
model2_coefs <- coefplot(intdid)[['prms']]
View(model2_coefs)
# Try using the other dependence measure again: (giving / revenue), but with all
# the interactions this time
intdid <- my_table(
rhs = "ATT:log_fixedcont2 + ATT + post:log_fixedcont2",
fe = "as.factor(year) + as.factor(FIPS)",
sample_df = df %>% filter(is.finite(log_fixedcont2)),
filename = "Results/Regression Tables/eap_twfe_int.tex",
title = "Heterogenous Effects Through Contributions"
)
model2_coefs <- coefplot(intdid)[['prms']] %>%
filter(str_detect(estimate_names, "ATT"))
View(model2_coefs)
model2_coefs$outcome <- c("Output", "Density", "Dependence")
model2_coefs$model <- 2
my_coefs <- bind_rows(model2_coefs)
my_coefs <- my_coefs %>%
mutate(y = case_when(
outcome != "Dependence" & estimate_names == "ATT"  ~ (exp(y) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(y) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ y,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ y * log(1.1)
),
ci_low = case_when(
outcome != "Dependence" & estimate_names == "ATT" ~ (exp(ci_low) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(ci_low) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ ci_low,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont" ~ ci_low * log(1.1)
),
ci_high = case_when(
outcome != "Dependence" & estimate_names == "ATT" ~ (exp(ci_high) - 1)*100,
outcome != "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ (1.1^(ci_high) -1)*100,
outcome == "Dependence" & estimate_names == "ATT" ~ ci_high,
outcome == "Dependence" & estimate_names == "ATT:log_fixedcont2" ~ ci_high * log(1.1)
))
my_coefs$outcome <- factor(my_coefs$outcome,
levels = c("Output", "Density", "Dependence"))
my_coefs$beta_hat <- paste0(my_coefs$model, my_coefs$estimate_names)
ggplot(my_coefs) +
geom_point(aes(y = as.factor(beta_hat), x = y, color = as.factor(beta_hat))) +
geom_errorbar(aes(y = as.factor(beta_hat), xmin = ci_low, xmax = ci_high, color = as.factor(beta_hat))) +
facet_wrap(~outcome, scales = "free_x",
labeller = as_labeller(
c(Output = "\\%-Change in Output",
Density = "\\%-Change in Density",
Dependence = "\\%-Point Change in Dependence")),
strip.position = "top") +
labs(x = NULL) +
labs(y = "") +
scale_color_discrete(labels = c("Disaster times Post",
"Disaster times Post times Log GC")) +
theme(strip.background = element_blank(), strip.placement = "outside",
legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y=element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank()) +
guides(color=guide_legend(nrow=1,byrow=TRUE))
View(df)
tikzDevice::tikz("Results/Figures/coef_plot.tex", height = 2.5, width = 6)
ggplot(my_coefs) +
geom_point(aes(y = as.factor(beta_hat), x = y, color = as.factor(beta_hat))) +
geom_errorbar(aes(y = as.factor(beta_hat), xmin = ci_low, xmax = ci_high, color = as.factor(beta_hat))) +
facet_wrap(~outcome, scales = "free_x",
labeller = as_labeller(
c(Output = "\\%-Change in Output",
Density = "\\%-Change in Density",
Dependence = "\\%-Point Change in Dependence")),
strip.position = "top") +
labs(x = NULL) +
labs(y = "") +
scale_color_discrete(labels = c("Disaster times Post",
"Disaster times Post times Log GC")) +
theme(strip.background = element_blank(), strip.placement = "outside",
legend.position = "bottom", axis.title.y = element_blank(),
axis.text.y=element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank()) +
guides(color=guide_legend(nrow=1,byrow=TRUE))
dev.off()
slopeest <- list()
for (i in 1:3){
slopeest[[i]]<- slopes(intdid[[i]], variables = "ATT",
newdata = datagrid(log_fixedcont2 = c(5, 10, 15, 20)))
if (i<3){
slopeest[[i]] <- slopeest[[i]] %>%
mutate(pct = case_when(
estimate > 0 ~ paste0(round(exp(estimate)*100,0),"\\%"),
TRUE ~ paste0("-",round((1-exp(estimate))*100,0),"\\%")))
} else {
slopeest[[i]] <- slopeest[[i]] %>%
mutate(pct = round(estimate,2))
}
}
slp1 <- plot_slopes(intdid[[1]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in log(Output)") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[1]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[1]][1,'estimate']+0.1, label = slopeest[[1]][1,'pct']) +
annotate("text", x=10, y=slopeest[[1]][2,'estimate']+0.1, label = slopeest[[1]][2,'pct']) +
annotate("text", x=15, y=slopeest[[1]][3,'estimate']+0.1, label = slopeest[[1]][3,'pct']) +
annotate("text", x=20, y=slopeest[[1]][4,'estimate']-0.1, label = slopeest[[1]][4,'pct'])
slp2 <- plot_slopes(intdid[[2]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in log(Density)") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[2]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[2]][1,'estimate']+0.1, label = slopeest[[2]][1,'pct']) +
annotate("text", x=10, y=slopeest[[2]][2,'estimate']+0.1, label = slopeest[[2]][2,'pct']) +
annotate("text", x=15, y=slopeest[[2]][3,'estimate']+0.1, label = slopeest[[2]][3,'pct']) +
annotate("text", x=20, y=slopeest[[2]][4,'estimate']-0.1, label = slopeest[[2]][4,'pct'])
slp3 <- plot_slopes(intdid[[3]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in Resource Dependence") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[3]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[3]][1,'estimate']-2, label = slopeest[[3]][1,'pct']) +
annotate("text", x=10, y=slopeest[[3]][2,'estimate']-2, label = slopeest[[3]][2,'pct']) +
annotate("text", x=15, y=slopeest[[3]][3,'estimate']-2, label = slopeest[[3]][3,'pct']) +
annotate("text", x=20, y=slopeest[[3]][4,'estimate']-2, label = slopeest[[3]][4,'pct'])
slopesplot <- ggarrange(slp1, slp2, slp3, nrow = 3)
annotate_figure(slopesplot,
top = text_grob("Average Changes in Nonprofit Indicators Post-Hurricane by Scale of Pre-Disaster GC",
face = "bold", size = 14))
tikzDevice::tikz("Results/Figures/slopes_plot.tex", height = 6, width = 5)
print({slopesplot})
dev.off()
slopeest <- list()
for (i in 1:3){
slopeest[[i]]<- slopes(intdid[[i]], variables = "ATT",
newdata = datagrid(log_fixedcont2 = c(5, 10, 15, 20)))
if (i<3){
slopeest[[i]] <- slopeest[[i]] %>%
mutate(pct = case_when(
estimate > 0 ~ paste0(round(exp(estimate)*100,0),"\\%"),
TRUE ~ paste0("-",round((1-exp(estimate))*100,0),"\\%")))
} else {
slopeest[[i]] <- slopeest[[i]] %>%
mutate(pct = round(estimate,2))
}
}
slp1 <- plot_slopes(intdid[[1]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in log(Output)") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[1]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[1]][1,'estimate']+0.15, label = slopeest[[1]][1,'pct']) +
annotate("text", x=10, y=slopeest[[1]][2,'estimate']+0.15, label = slopeest[[1]][2,'pct']) +
annotate("text", x=15, y=slopeest[[1]][3,'estimate']+0.15, label = slopeest[[1]][3,'pct']) +
annotate("text", x=20, y=slopeest[[1]][4,'estimate']-0.15, label = slopeest[[1]][4,'pct'])
slp2 <- plot_slopes(intdid[[2]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in log(Density)") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[2]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[2]][1,'estimate']+0.1, label = slopeest[[2]][1,'pct']) +
annotate("text", x=10, y=slopeest[[2]][2,'estimate']+0.1, label = slopeest[[2]][2,'pct']) +
annotate("text", x=15, y=slopeest[[2]][3,'estimate']+0.1, label = slopeest[[2]][3,'pct']) +
annotate("text", x=20, y=slopeest[[2]][4,'estimate']-0.1, label = slopeest[[2]][4,'pct'])
slp3 <- plot_slopes(intdid[[3]],
variables = "ATT",
condition = "log_fixedcont2") +
labs(x = "Log of 2007 Contributions",
y = "Average change in Resource Dependence") +
theme_bw() +
geom_hline(yintercept = 0) +
geom_point(slopeest[[3]], mapping = aes(x=log_fixedcont2, y=estimate)) +
annotate("text", x=5,  y=slopeest[[3]][1,'estimate']-3, label = slopeest[[3]][1,'pct']) +
annotate("text", x=10, y=slopeest[[3]][2,'estimate']-3, label = slopeest[[3]][2,'pct']) +
annotate("text", x=15, y=slopeest[[3]][3,'estimate']-3, label = slopeest[[3]][3,'pct']) +
annotate("text", x=20, y=slopeest[[3]][4,'estimate']-3, label = slopeest[[3]][4,'pct'])
slopesplot <- ggarrange(slp1, slp2, slp3, nrow = 3)
annotate_figure(slopesplot,
top = text_grob("Average Changes in Nonprofit Indicators Post-Hurricane by Scale of Pre-Disaster GC",
face = "bold", size = 14))
tikzDevice::tikz("Results/Figures/slopes_plot.tex", height = 6, width = 5)
print({slopesplot})
dev.off()
